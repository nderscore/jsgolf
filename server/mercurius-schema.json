[
  "enum ChallengeStatus {\n  DRAFT\n  PROPOSED\n  PUBLISHED\n  REJECTED\n  DELETED\n}\n\ntype Challenge {\n  id: ID!\n  created: Date!\n  published: Date\n  title: String!\n  description: String!\n  author: User!\n  authorId: ID!\n  status: ChallengeStatus!\n  setupCode: String!\n  testCode: String!\n  tags: [String]!\n  solutions: [Solution]!\n  upvotes: Int\n  downvotes: Int\n  rejectionReason: String\n}\n\ntype CreateChallengeResult {\n  challenge: Challenge\n  result: Result!\n}",
  "enum Role {\n  USER\n  CREATOR\n  PUBLISHER\n  MODERATOR\n  ADMINISTRATOR\n}\n\ndirective @auth(\n  role: Role = USER\n) on OBJECT | FIELD_DEFINITION\n\ndirective @rateLimit(\n  max: Int,\n  window: String,\n  message: String,\n  identityArgs: [String],\n  arrayLengthField: String\n) on FIELD_DEFINITION",
  "type Mutation {\n  \"\"\"\n  Creates a new code golf Challenge\n  \"\"\"\n  createChallenge(\n    title: String!,\n    description: String!,\n    tags: [String],\n    setupCode: String!,\n    testCode: String!,\n    referenceSolution: String!\n  ): CreateChallengeResult!\n    @auth(role: CREATOR)\n    @rateLimit(max: 1, window: \"5m\")\n\n  \"\"\"\n  Executes a dry run of arbitrary code golf Challenge code\n  \"\"\"\n  testChallenge(\n    setupCode: String!,\n    testCode: String!,\n    solution: String!\n  ): Result!\n    @auth(role: CREATOR)\n    @rateLimit(max: 5, window: \"1m\")\n\n  \"\"\"\n  Submits a solution to a published Challenege\n  \"\"\"\n  createSolution(\n    challenge: ID!,\n    solutionCode: String!\n  ): CreateSolutionResult!\n    @auth\n    @rateLimit(max: 2, window: \"1m\")\n\n  \"\"\"\n  Executes a dry run of a solution\n  \"\"\"\n  testSolution(\n    challenge: ID!,\n    solutionCode: String!\n  ): Result!\n    @auth\n    @rateLimit(max: 5, window: \"1m\")\n\n  \"\"\"\n  Upvote a proposed Challenge\n  \"\"\"\n  upvote(\n    challenge: ID!\n  ): Boolean!\n    @auth(role: CREATOR)\n    @rateLimit(max: 3, window: \"1m\")\n\n  \"\"\"\n  Downvote a proposed Challenge with reason\n  \"\"\"\n  downvote(\n    challenge: ID!,\n    reason: String\n  ): Boolean!\n    @auth(role: CREATOR)\n    @rateLimit(max: 3, window: \"1m\")\n}",
  "type Query {\n  getUser(id: ID!): User\n  getOwnUser: User @auth\n\n  getChallenge(id: ID!): Challenge\n  getChallenges: [Challenge]!\n  getProposedChallenges: [Challenge]!\n}",
  "type Result {\n  success: Boolean!\n  errors: [String]\n}\n\ntype CreateSolutionResult {\n  solution: Solution\n  result: Result!\n}",
  "scalar Date",
  "type Solution {\n  authorId: ID!\n  author: User!\n  timestamp: Date!\n  size: Int!\n  code: String\n  challengeId: ID!\n  challenge: Challenge!\n}",
  "type User {\n  id: ID!\n  githubId: Int!\n  name: String!\n  challenges: [Challenge]\n  solutions: [Solution]\n}"
]
